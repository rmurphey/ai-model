name: Test Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov pytest-html pytest-xdist

    - name: Run core business logic tests
      run: |
        pytest tests/test_impact_model.py tests/test_cost_structure.py tests/test_adoption_dynamics.py tests/test_baseline.py \
          -v --tb=short --strict-markers \
          --cov=src.model --cov-report=xml --cov-report=html \
          --html=reports/test-report-${{ matrix.python-version }}.html --self-contained-html

    - name: Run utility and integration tests
      run: |
        pytest tests/test_math_helpers.py tests/test_exceptions.py tests/test_validation_helpers.py tests/test_scenario_loading.py tests/test_integration.py \
          -v --tb=short --strict-markers \
          --cov=src.utils --cov=src.analysis --cov-append --cov-report=xml --cov-report=html

    - name: Upload test reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-reports-python-${{ matrix.python-version }}
        path: |
          reports/
          htmlcov/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true

  test-matrix-summary:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
    - name: Check test matrix results
      run: |
        if [[ "${{ needs.test.result }}" == "failure" ]]; then
          echo "❌ Tests failed in at least one Python version"
          exit 1
        elif [[ "${{ needs.test.result }}" == "success" ]]; then
          echo "✅ All tests passed across all Python versions"
        else
          echo "⚠️ Tests completed with warnings or were cancelled"
          exit 1
        fi