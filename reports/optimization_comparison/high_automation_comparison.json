{
  "scenario_name": "high_automation",
  "configuration": {
    "team_size": 50,
    "team_composition": {
      "senior": 15,
      "mid": 20,
      "junior": 15
    },
    "senior_ratio": 0.3,
    "junior_ratio": 0.3,
    "test_automation": 0.9,
    "cost_per_seat": 150
  },
  "traditional_optimization": {
    "approach": "Maximize profit by finding optimal AI adoption percentage",
    "optimal_adoption": 0,
    "throughput": 2.2598870056497176,
    "bottleneck": "testing",
    "monthly_profit": 130808.40677966103,
    "focus": "Global optimization of AI adoption",
    "all_results": [
      {
        "adoption": 0,
        "throughput": 2.2598870056497176,
        "bottleneck": "testing",
        "monthly_value": 130808.40677966103,
        "monthly_cost": 0.0,
        "monthly_profit": 130808.40677966103
      },
      {
        "adoption": 10,
        "throughput": 2.2635589421783955,
        "bottleneck": "testing",
        "monthly_value": 130891.80982511728,
        "monthly_cost": 750.0,
        "monthly_profit": 130141.80982511728
      },
      {
        "adoption": 20,
        "throughput": 2.266414842795245,
        "bottleneck": "testing",
        "monthly_value": 130923.7546934559,
        "monthly_cost": 1500.0,
        "monthly_profit": 129423.7546934559
      },
      {
        "adoption": 30,
        "throughput": 2.2684726351723383,
        "bottleneck": "testing",
        "monthly_value": 130905.46299882855,
        "monthly_cost": 2250.0,
        "monthly_profit": 128655.46299882855
      },
      {
        "adoption": 40,
        "throughput": 2.2697512003491926,
        "bottleneck": "testing",
        "monthly_value": 130838.22177267038,
        "monthly_cost": 3000.0,
        "monthly_profit": 127838.22177267038
      },
      {
        "adoption": 50,
        "throughput": 2.27027027027027,
        "bottleneck": "testing",
        "monthly_value": 130723.37676413514,
        "monthly_cost": 3750.0,
        "monthly_profit": 126973.37676413514
      },
      {
        "adoption": 60,
        "throughput": 2.2700503265874294,
        "bottleneck": "testing",
        "monthly_value": 130562.32580839413,
        "monthly_cost": 4500.0,
        "monthly_profit": 126062.32580839413
      },
      {
        "adoption": 70,
        "throughput": 2.269112501325416,
        "bottleneck": "testing",
        "monthly_value": 130356.51230292044,
        "monthly_cost": 5250.0,
        "monthly_profit": 125106.51230292044
      },
      {
        "adoption": 80,
        "throughput": 2.2674784799496117,
        "bottleneck": "testing",
        "monthly_value": 130107.41882807763,
        "monthly_cost": 6000.0,
        "monthly_profit": 124107.41882807763
      },
      {
        "adoption": 90,
        "throughput": 2.2651704073150456,
        "bottleneck": "testing",
        "monthly_value": 129816.56094443239,
        "monthly_cost": 6750.0,
        "monthly_profit": 123066.56094443239
      },
      {
        "adoption": 100,
        "throughput": 2.2622107969151672,
        "bottleneck": "testing",
        "monthly_value": 129485.48119526992,
        "monthly_cost": 7500.0,
        "monthly_profit": 121985.48119526992
      }
    ]
  },
  "toc_optimization": {
    "approach": "Apply Five Focusing Steps to maximize constraint throughput",
    "optimal_adoption": 30.0,
    "throughput": 3.9799596413015808,
    "constraint": "testing",
    "monthly_profit": 1191737.8923904742,
    "exploitation_improvement": 46.20555624053255,
    "focus": "Constraint throughput optimization",
    "subordination_benefit": 20.0
  },
  "comparison_metrics": {
    "profit_difference": 1060929.4856108131,
    "profit_improvement_percent": 811.0560412205659,
    "adoption_difference": 30.0,
    "throughput_difference": 1.7200726356518632,
    "exploitation_value": 46.20555624053255,
    "approach_difference": "ToC focuses on constraint, traditional on global adoption"
  },
  "key_insights": [
    {
      "category": "AI Adoption",
      "finding": "ToC recommends 30% vs traditional 0%",
      "explanation": "ToC optimizes for constraint throughput, not maximum AI adoption"
    },
    {
      "category": "Zero-Cost Improvement",
      "finding": "46.2% improvement possible at $0",
      "explanation": "ToC exploits constraint before adding capacity (traditional misses this)"
    },
    {
      "category": "Subordination",
      "finding": "20.0% improvement from subordination",
      "explanation": "Non-constraints support constraint (traditional optimizes each stage independently)"
    },
    {
      "category": "Economic Impact",
      "finding": "Constraint costs $3278/day",
      "explanation": "ToC makes constraint cost visible, traditional approach hides this"
    }
  ]
}